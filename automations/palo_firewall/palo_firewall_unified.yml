args:
- default: false
  isArray: false
  name: dev
  required: false
  secret: false
commonfields:
  id: d702625b-96c6-4f8f-b614-101416a68319
  version: -1
enabled: false
name: palo_firewall
script: |-
  import urllib3



  urllib3.disable_warnings()

  PROXY = demisto.params().get('proxy')
  SECURE = demisto.params().get('secure')
  BASE_URL = demisto.params().get('url')
  API_KEY = demisto.params().get('apikey')
  URL_SUFFIX = 'api'
  if not demisto.params().get('proxy', False):
      del os.environ['HTTP_PROXY']
      del os.environ['HTTPS_PROXY']
      del os.environ['http_proxy']
      del os.environ['https_proxy']

  '''HELPER FUNCTIONS'''


  def http_request(method, params):
      r = requests.Response
      if method is 'GET':
          r = requests.get(BASE_URL + "/" + URL_SUFFIX, params=params, verify=SECURE)
      elif method is 'POST':
          if not API_KEY:
              headers = {
                  'Content-Type': 'application/json',
                  'Accept': 'application/json'
              }
          else:
              headers = {
                  'Content-Type': 'application/json',
                  'Accept': 'application/json',
                  'X-FunTranslations-Api-Secret': API_KEY
              }

          r = requests.post(BASE_URL + "/" + URL_SUFFIX, params=params, headers=headers, verify=SECURE)

      if r.status_code is not 200:
          return_error('Error in API call [%d] - %s' % (r.status_code, r.reason))
      return r.content


  """ MAIN FUNCTIONS """


  def panos_get_api_key():
      params = {
          'type': 'keygen',
          'user': demisto.params().get('credentials').get('identifier'),
          'password': demisto.params().get('credentials').get('password')
      }
      r = http_request('GET', params)
      return r

  def panos_get_current_users():
      params = {
          'type': 'op',
          'cmd': '<show><global-protect-gateway><current-user/></global-protect-gateway></show>',
          'key': demisto.params().get('apiKey')
      }
      r = http_request('GET', params)
      demisto.command('ConvertXmlToJson xml=' + str(r) + ' contextKey=globalProtect')
      return r

  ''' EXECUTION '''


  def main():
      LOG('command is %s' % (demisto.command(),))
      try:
          if demisto.command() == 'panos-get-api-key':
              demisto.results(panos_get_api_key())
          if demisto.command() == 'panos-get-current-users':
              demisto.results(panos_get_current_users())
          elif demisto.command() == 'test-module':
              demisto.results('ok')
      except Exception as e:
          logging.exception(e)


  if __name__ == 'builtins':
      main()
subtype: python3
system: false
timeout: '0'
type: python
